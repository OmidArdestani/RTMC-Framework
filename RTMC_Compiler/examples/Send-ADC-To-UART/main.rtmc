
#include "read_adc.rtmc"
// #include "definitions.rtmc";
// #include "send_uart.rtmc";

#define USB4_BE_CMD_OPCODE_UNDEFINED        0
#define USB4_BE_CMD_PROTOCOL_TYPE_SIDEBAND  1



struct USB4BECommand
{
    int ProtocolType :  4;
    int Opcode       : 12;
};

struct USB4SBBaseCmd : USB4BECommand
{
    int Rsvd1 : 16;
};

struct USB4ATSTX
{
    int CmdNotResp   : 1;
    int ReturnBounce : 1;
    int Recipient    : 1;
    int Bounce       : 1;
    int Responder    : 1;
    int Rsvd         : 1;
    int StartLT      : 2;
};

struct AT_CmdDataSymbols
{
    int REG          : 8;
    int LEN          : 7;
    int WnR          : 1;
    char* COMMAND_DATA;
};

struct USB4TransactionFooter
{
    char LCRC = 0;
    char HCRC = 0;

    char EndDLE = 0xFE;
    char ETX    = 0x40;
};


struct USB4ATTransaction
{
    char StartDLE = 0xFE;

    USB4ATSTX ATTX;

    AT_CmdDataSymbols ATDataSymbols;

    USB4TransactionFooter TransactionFooter;
};

void main() 
{
    int core = 1;
    int priority = 1;
    int stack_size = 1024;
    int task_id = 1;
    StartTask(stack_size, core, priority, task_id, read_adc_task_run);

    int counter = 0;

    char data[4] = {0x01, 0x02, 0x03, 0x04};

    USB4SBBaseCmd* cmd = (USB4SBBaseCmd*) data;

    printf("The cmd value: {0} {1} sizeof cmd: {2}", 
               cmd->ProtocolType, 
               cmd->Opcode,
               sizeof(USB4SBBaseCmd));
    
    while(1)
    {
        RTOS_DELAY_MS(500);
        print("Main: heartbeat");

        counter++;
        if (counter == 20)
        {
            break;
        }
    }
    
    print("Main task finished");
}