// RT-Micro-C Task Example - New Function-Based Syntax
// This demonstrates the new function-based task syntax

void blink_task_run()
{
    int ledPin = 13;
    int blinkDelay = 500;
    
    HW_GPIO_INIT(ledPin, 1);  // Initialize as output
    
    while (1)
    {
        HW_GPIO_SET(ledPin, 1);
        delay_ms(blinkDelay);
        HW_GPIO_SET(ledPin, 0);
        delay_ms(blinkDelay);
        
        print("Blink cycle completed");
    }
}

void sensor_task_run()
{
    int sensorPin = 25;
    int threshold = 512;
    
    HW_ADC_INIT(sensorPin);
    
    while (1)
    {
        int reading = HW_ADC_READ(sensorPin);
        
        if (reading > threshold)
        {
            print("Sensor threshold exceeded");
        }
        
        delay_ms(1000);
    }
}

void main()
{
    print("RT-Micro-C Task System Starting");
    
    // Create tasks using the new StartTask syntax
    int core1 = 0;
    int priority1 = 2;
    int stack_size1 = 1024;
    int task_id1 = 1;
    StartTask(stack_size1, core1, priority1, task_id1, blink_task_run);
    
    int core2 = 1;
    int priority2 = 3;
    int stack_size2 = 1024;
    int task_id2 = 2;
    StartTask(stack_size2, core2, priority2, task_id2, sensor_task_run);
    
    while (1)
    {
        delay_ms(5000);
        print("Main loop heartbeat");
    }
}
