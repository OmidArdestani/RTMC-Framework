#include "definitions.rtmc";

// Test file to verify both brace styles work correctly

// Functions with different brace styles
void immediatebraceFunction() {
    DBG_PRINT("Function with immediate brace");
}

void newlinebraceFunction()
{
    DBG_PRINT("Function with newline brace");
}

void mixedStyleFunction(int x, int y) {
    DBG_PRINT("Mixed style function with parameters");
}

void anotherNewlineFunction(int param)
{
    DBG_PRINT("Another newline style function");
}

// Tasks with different brace styles
void ImmediateBraceTask() {
    static int counter = 0;
    DBG_PRINT("Task with immediate brace");
    counter++;
    RTOS_DELAY_MS(1000);
}

void NewlineBraceTask()
{
    static int value = 42;
    DBG_PRINT("Task with newline brace");
    value *= 2;
    RTOS_DELAY_MS(1500);
}

void MixedTask()
{
    DBG_PRINT("Mixed style task");
    RTOS_DELAY_MS(2000);
}

void AnotherNewlineTask()
{
    DBG_PRINT("Another newline task");
    RTOS_DELAY_MS(500);
}

void main()
{
    // Start tasks with their original core IDs and priorities
    StartTask(1024, 0, 1, 1, ImmediateBraceTask);
    StartTask(1024, 1, 1, 2, NewlineBraceTask);
    StartTask(1024, 0, 1, 3, MixedTask);
    StartTask(1024, 1, 1, 4, AnotherNewlineTask);

    // Call test functions
    immediatebraceFunction();
    newlinebraceFunction();
    mixedStyleFunction(1, 2);
    anotherNewlineFunction(10);
    DBG_PRINT("All function calls completed");

    while(1) {
        RTOS_DELAY_MS(5000);
        DBG_PRINT("Main loop heartbeat");
    }
}
